# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, xinetzone
# This file is distributed under the same license as the docutils-doc
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: docutils-doc \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-09 14:45+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../docutils/docs/dev/policies.txt:3
msgid "Docutils Project Policies"
msgstr ""

#: ../../docutils/docs/dev/policies.txt
msgid "Author"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:5
msgid "David Goodger; open to all Docutils developers"
msgstr ""

#: ../../docutils/docs/dev/policies.txt
msgid "Contact"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:6
msgid "docutils-develop@lists.sourceforge.net"
msgstr ""

#: ../../docutils/docs/dev/policies.txt
msgid "Date"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:7
msgid "$Date$"
msgstr ""

#: ../../docutils/docs/dev/policies.txt
msgid "Revision"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:8
msgid "$Revision$"
msgstr ""

#: ../../docutils/docs/dev/policies.txt
msgid "Copyright"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:9
msgid "This document has been placed in the public domain."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:11
msgid "目录"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:13
msgid ""
"The Docutils project group is a meritocracy based on code contribution "
"and lots of discussion [#bcs]_.  A few quotes sum up the policies of the "
"Docutils project.  The IETF's classic credo (by MIT professor Dave Clark)"
" is an ideal we can aspire to:"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:18
msgid ""
"We reject: kings, presidents, and voting.  We believe in: rough consensus"
" and running code."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:21
msgid ""
"As architect, chief cook and bottle-washer, David Goodger currently "
"functions as BDFN (Benevolent Dictator For Now).  (But he would happily "
"abdicate the throne given a suitable candidate.  Any takers?)"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:25
msgid ""
"Eric S. Raymond, anthropologist of the hacker subculture, writes in his "
"essay `The Magic Cauldron`_:"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:28
msgid ""
"The number of contributors [to] projects is strongly and inversely "
"correlated with the number of hoops each project makes a user go through "
"to contribute."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:32
msgid ""
"We will endeavour to keep the barrier to entry as low as possible. The "
"policies below should not be thought of as barriers, but merely as a "
"codification of experience to date.  These are \"best practices\"; "
"guidelines, not absolutes.  Exceptions are expected, tolerated, and used "
"as a source of improvement.  Feedback and criticism is welcome."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:38
msgid ""
"As for control issues, Emmett Plant (CEO of the Xiph.org Foundation, "
"originators of Ogg Vorbis) put it well when he said:"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:41
msgid ""
"Open source dictates that you lose a certain amount of control over your "
"codebase, and that's okay with us."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:44
msgid ""
"Phrase borrowed from `Ben Collins-Sussman of the Subversion project "
"<http://www.red-bean.com/sussman/svn-anti-fud.html>`__."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:52
msgid "How to get a new feature into Docutils"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:56
msgid "Question:"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:55
msgid ""
"I would very much like to have this new feature in the Docutils core. "
"What exactly do I have to do to make this possible?"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:58
msgid "Present your idea at the Docutils-develop_ mailing list,"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:60
msgid "usually triggers a fast response,"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:61
msgid "may be forgotten later,"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:63
msgid "and/or file a ticket at Docutils' `feature request tracker`_."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:65
msgid "there is a permanent record,"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:66
msgid "it may stay forgotten among all the other feature requests."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:68
msgid ""
"Convince a Docutils developer that this is a valuable addition worth the "
"effort."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:71
msgid ""
"Contribute. The developers will make sure that the contribution fits "
"nicely into Docutils (cf. the `review criteria`_). This might involve "
"discussing (and compromising on) design and implementation details. It "
"might also lead to the conclusion that the addition fits better in the "
"`extensions and related projects`_."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:77
msgid ""
"Be patient, and be persistent.  None of us are paid to do this, it's all "
"in our spare time -- which is precious and rare."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:81
msgid "How to make code contributions that are easily accepted"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:83
msgid ""
"Have a look at the `Python coding conventions`_ and `documentation "
"conventions`_ below."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:86
msgid ""
"**Prepare test cases.** This vastly helps when integrating new code. Test"
" cases are also examples and showcases for new features. See `Docutils "
"Testing`_ for a description of the test suite in ``docutils/test/``."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:90
msgid "Ensure the addition works with all `supported Python versions`__."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:94
msgid ""
"Look at the Docutils sources to see how similar features are implemented,"
" learn to do it \"the Docutils way\"."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:97
msgid ""
"Prepare a patch or an addition to the existing documentation. Include "
"links."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:100
msgid ""
"If you are familiar with version control, consider creating a `feature "
"branch`_ in a Docutils repository_ checkout. (Working with branches is "
"*much* easier with Git_. You can get a Git clone of the repository from "
"http://repo.or.cz/w/docutils.git or with git-svn.)"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:105
msgid ""
"Mail your patch to the Docutils-develop_ mailing list or attach it to the"
" relevant ticket at Docutils' `feature request tracker`_."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:108
msgid "We accept patches created with diff, SVN, or Git."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:118
msgid "Python Coding Conventions"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:120
msgid ""
"Contributed code will not be refused merely because it does not strictly "
"adhere to these conditions; as long as it's internally consistent, clean,"
" and correct, it probably will be accepted.  But don't be surprised if "
"the \"offending\" code gets fiddled over time to conform to these "
"conventions."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:126
msgid ""
"The Docutils project shall follow the generic coding conventions as "
"specified in the `Style Guide for Python Code`_ and `Docstring "
"Conventions`_ PEPs, summarized, clarified, and extended as follows:"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:130
msgid "4 spaces per indentation level.  No hard tabs."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:132
msgid ""
"Use only 7-bit ASCII, no 8-bit strings.  See `Docutils "
"Internationalization`_."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:135
msgid ""
"No one-liner compound statements (i.e., no ``if x: return``: use two "
"lines & indentation), except for degenerate class or method definitions "
"(i.e., ``class X: pass`` is OK.)."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:139
msgid "Lines should be no more than 78 characters long."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:141
msgid ""
"Use \"StudlyCaps\" for class names (except for element classes in "
"docutils.nodes)."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:144
msgid ""
"Use \"lowercase\" or \"lowercase_with_underscores\" for function, method,"
" and variable names.  For short names, maximum two words, joined "
"lowercase may be used (e.g. \"tagname\").  For long names with three or "
"more words, or where it's hard to parse the split between two words, use "
"lowercase_with_underscores (e.g., \"note_explicit_target\", "
"\"explicit_target\").  If in doubt, use underscores."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:152
msgid ""
"Avoid lambda expressions, which are inherently difficult to understand.  "
"Named functions are preferable and superior: they're faster (no run-time "
"compilation), and well-chosen names serve to document and aid "
"understanding."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:157
msgid ""
"Avoid functional constructs (filter, map, etc.).  Use list comprehensions"
" instead."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:160
msgid ""
"Avoid ``from __future__ import`` constructs.  They are inappropriate for "
"production code."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:163
msgid ""
"Use 'single quotes' for string literals, and \"\"\"triple double "
"quotes\"\"\" for docstrings."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:173
msgid "Documentation Conventions"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:175
msgid "Docutils documentation is written using reStructuredText, of course."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:177
msgid ""
"Use 7-bit ASCII if at all possible, and Unicode substitutions when "
"necessary."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:180
msgid "Use the following section title adornment styles::"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:202
msgid ""
"Use two blank lines before each section/subsection/etc. title.  One blank"
" line is sufficient between immediately adjacent titles."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:205
msgid ""
"Add a bibliographic field list immediately after the document "
"title/subtitle.  See the beginning of this document for an example."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:208
msgid ""
"Add an Emacs \"local variables\" block in a comment at the end of the "
"document.  See the end of this document for an example."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:213
msgid "Copyrights and Licensing"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:215
msgid ""
"The majority of the Docutils project code and documentation has been "
"placed in the public domain.  Unless clearly and explicitly indicated "
"otherwise, any patches (modifications to existing files) submitted to the"
" project for inclusion (via Subversion, SourceForge trackers, mailing "
"lists, or private email) are assumed to be in the public domain as well."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:222
msgid ""
"Any new files contributed to the project should clearly state their "
"intentions regarding copyright, in one of the following ways:"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:225
msgid ""
"Public domain (preferred): include the statement \"This module/document "
"has been placed in the public domain.\""
msgstr ""

#: ../../docutils/docs/dev/policies.txt:228
msgid ""
"Copyright & open source license: include a copyright notice, along with "
"either an embedded license statement, a reference to an accompanying "
"license file, or a license URL."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:232
msgid ""
"The license should be well known, simple and compatible with other open "
"source software licenses. To keep the number of different licenses at a "
"minimum, using the `2-Clause BSD license`_ is recommended."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:238
msgid "2-Clause BSD license"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:240
msgid "(also known as \"Simplified\" or `FreeBSD license`)"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:242
msgid ""
"If you want a simple, permissive non-copyleft free software license, the "
"FreeBSD license is a reasonable choice. However, please don't call it a "
"“BSD” or “BSD-style” license, because that is likely to cause confusion "
"which could lead to use of the flawed original BSD license."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:253
msgid "`Various Licenses and Comments about Them`_"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:253
msgid "Pros:"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:250
msgid "clear wording, structured text"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:251
msgid "license used by the closely related Sphinx project"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:252
msgid ""
"\"2-Clause BSD license\" is a non-ambiguous name, used by both, OSI and "
"GNU."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:258
msgid "References:"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:256
msgid "https://www.freebsd.org/copyright/freebsd-license.html"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:257
msgid "https://opensource.org/licenses/BSD-2-Clause"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:258
msgid "https://spdx.org/licenses/BSD-2-Clause.html"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:269
msgid "Repository"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:271
msgid ""
"Please see the `repository documentation`_ for details on how to access "
"Docutils' Subversion repository.  Anyone can access the repository "
"anonymously.  Only project developers can make changes. (If you would "
"like to become a project developer, just ask!)  Also see `Setting Up For "
"Docutils Development`_ below for some useful info."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:277
msgid ""
"Unless you really *really* know what you're doing, please do *not* use "
"``svn import``.  It's quite easy to mess up the repository with an "
"import."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:285
msgid "Branches"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:287
msgid "(These branch policies go into effect with Docutils 0.4.)"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:289
msgid ""
"The \"docutils\" directory of the **trunk** (a.k.a. the **Docutils "
"core**) is used for active -- but stable, fully tested, and reviewed -- "
"development."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:293
msgid ""
"If we need to cut a bugfix release, we'll create a **maintenance branch**"
" based on the latest feature release.  For example, when Docutils 0.5 is "
"released, this would be ``branches/docutils-0.5``, and any existing 0.4.x"
" maintenance branches may be retired.  Maintenance branches will receive "
"bug fixes only; no new features will be allowed here."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:299
msgid ""
"Obvious and uncontroversial bug fixes *with tests* can be checked in "
"directly to the core and to the maintenance branches.  Don't forget to "
"add test cases!  Many (but not all) bug fixes will be applicable both to "
"the core and to the maintenance branches; these should be applied to "
"both.  No patches or dedicated branches are required for bug fixes, but "
"they may be used.  It is up to the discretion of project developers to "
"decide which mechanism to use for each case."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:310
msgid ""
"Feature additions and API changes will be done in **feature branches**.  "
"Feature branches will not be managed in any way. Frequent small checkins "
"are encouraged here.  Feature branches must be discussed on the "
"`docutils-develop mailing list`_ and reviewed before being merged into "
"the core."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:321
msgid "Review Criteria"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:323
msgid ""
"Before a new feature, an API change, or a complex, disruptive, or "
"controversial bug fix can be checked in to the core or into a maintenance"
" branch, it must undergo review.  These are the criteria:"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:327
msgid "The branch must be complete, and include full documentation and tests."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:330
msgid ""
"There should ideally be one branch merge commit per feature or change.  "
"In other words, each branch merge should represent a coherent change set."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:334
msgid ""
"The code must be stable and uncontroversial.  Moving targets and features"
" under debate are not ready to be merged."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:337
msgid ""
"The code must work.  The test suite must complete with no failures. See "
"`Docutils Testing`_."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:340
msgid ""
"The review process will ensure that at least one other set of eyeballs & "
"brains sees the code before it enters the core.  In addition to the "
"above, the general `Check-ins`_ policy (below) also applies."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:346
msgid "Check-ins"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:348
msgid ""
"Changes or additions to the Docutils core and maintenance branches carry "
"a commitment to the Docutils user community.  Developers must be prepared"
" to fix and maintain any code they have committed."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:352
msgid ""
"The Docutils core (``trunk/docutils`` directory) and maintenance branches"
" should always be kept in a stable state (usable and as problem-free as "
"possible).  All changes to the Docutils core or maintenance branches must"
" be in `good shape`_, usable_, documented_, tested_, and `reasonably "
"complete`_."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:358
msgid ""
"_`Good shape` means that the code is clean, readable, and free of junk "
"code (unused legacy code; by analogy to \"junk DNA\")."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:361
msgid ""
"_`Usable` means that the code does what it claims to do.  An \"XYZ "
"Writer\" should produce reasonable XYZ output."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:364
msgid ""
"_`Documented`: The more complete the documentation the better. Modules & "
"files must be at least minimally documented internally. `Docutils Front-"
"End Tools`_ should have a new section for any front-end tool that is "
"added.  `Docutils Configuration Files`_ should be modified with any "
"settings/options defined.  For any non-trivial change, the HISTORY.txt_ "
"file should be updated."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:371
msgid ""
"_`Tested` means that unit and/or functional tests, that catch all bugs "
"fixed and/or cover all new functionality, have been added to the test "
"suite.  These tests must be checked by running the test suite under all "
"supported Python versions, and the entire test suite must pass.  See "
"`Docutils Testing`_."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:377
msgid ""
"_`Reasonably complete` means that the code must handle all input. Here "
"\"handle\" means that no input can cause the code to fail (cause an "
"exception, or silently and incorrectly produce nothing). \"Reasonably "
"complete\" does not mean \"finished\" (no work left to be done).  For "
"example, a writer must handle every standard element from the Docutils "
"document model; for unimplemented elements, it must *at the very least* "
"warn that \"Output for element X is not yet implemented in writer Y\"."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:386
msgid ""
"If you really want to check code directly into the Docutils core, you "
"can, but you must ensure that it fulfills the above criteria first.  "
"People will start to use it and they will expect it to work! If there are"
" any issues with your code, or if you only have time for gradual "
"development, you should put it on a branch or in the sandbox first.  It's"
" easy to move code over to the Docutils core once it's complete."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:394
msgid ""
"It is the responsibility and obligation of all developers to keep the "
"Docutils core and maintenance branches stable.  If a commit is made to "
"the core or maintenance branch which breaks any test, the solution is "
"simply to revert the change.  This is not vindictive; it's practical. We "
"revert first, and discuss later."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:400
msgid ""
"Docutils will pursue an open and trusting policy for as long as possible,"
" and deal with any aberrations if (and hopefully not when) they happen.  "
"We'd rather see a torrent of loose contributions than just a trickle of "
"perfect-as-they-stand changes.  The occasional mistake is easy to fix.  "
"That's what version control is for!"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:414
msgid "Version Identification"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:416
msgid ""
"The state of development of the current Docutils codebase is stored in "
"two forms: the sequence `docutils.__version_info__`_ and the `PEP 440`_ "
"conformant text string `docutils.__version__`_. See also the `Docutils "
"Release Procedure`_"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:425
msgid "``docutils.__version_info__``"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:427
msgid ""
"``docutils.__version_info__`` is an instance of ``docutils.VersionInfo`` "
"based on collections.namedtuple_. It is modelled on `sys.version_info`_ "
"and has the following attributes:"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:438
msgid "major"
msgstr ""

msgid "non-negative integer"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:432
msgid ""
"**Major releases** (x.0, e.g. 1.0) will be rare, and will represent major"
" changes in API, functionality, or commitment.  The major number will be "
"bumped to 1 when the project is feature-complete, and may be incremented "
"later if there is a major change in the design or API.  When Docutils "
"reaches version 1.0, the major APIs will be considered frozen and "
"backward compatibility will become of paramount importance."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:443
msgid "minor"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:441
msgid ""
"Releases that change the minor number (x.y, e.g. 0.5) will be **feature "
"releases**; new features from the `Docutils core`_ will be included."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:451
msgid "micro"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:446
msgid ""
"Releases that change the micro number (x.y.z, e.g. 0.4.1) will be **bug-"
"fix releases**.  No new features will be introduced in these releases; "
"only bug fixes will be included."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:450
msgid ""
"The micro number is omitted from `docutils.__version__`_ when it equals "
"zero."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:476
msgid "_`releaselevel`"
msgstr ""

msgid "text string"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:454
msgid ""
"The release level indicates the `development status`_ (or phase) of the "
"project's codebase:"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:458
#: ../../docutils/docs/dev/policies.txt:527
msgid "Release Level"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:458
msgid "Label [#]_"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:458
msgid "Description"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:460
msgid "alpha"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:460
msgid "``a``"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:460
msgid ""
"Reserved for use after major experimental changes, to indicate an "
"unstable codebase."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:463
msgid "beta"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:463
msgid "``b``"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:463
msgid "Indicates active development, between releases."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:465
msgid "candidate"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:465
msgid "``rc``"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:465
msgid ""
"Release candidate: indicates that the codebase is ready to release unless"
" significant bugs emerge."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:469
msgid "final"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:469
msgid "Indicates an official project release."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:472
msgid "The labels are used in the `docutils.__version__`_ pre-release segment."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:480
msgid "_`serial`"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:479
msgid ""
"The serial number is zero for final releases and incremented whenever a "
"new pre-release is begun."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:484
msgid "_`release`"
msgstr ""

msgid "boolean"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:483
msgid "True for official releases and pre-releases, False during development."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:486
msgid ""
"One of *{major, minor, micro, serial}* is incremented after each release,"
" and the lower-order numbers are reset to 0."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:489
msgid ""
"The default state of the repository during active development is release "
"level = \"beta\", serial = 0, release = False."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:492
msgid ""
"``docutils.__version_info__`` can be used to test for a minimally "
"required version, e.g. ::"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:497
msgid "is True for all versions after ``\"0.13\"``."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:505
msgid "``docutils.__version__``"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:507
msgid ""
"The text string ``docutils.__version__`` is a human readable, `PEP "
"440`_-conforming version specifier.  For version comparison operations, "
"use `docutils.__version_info__`_."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:511
msgid "``docutils.__version__`` takes the following form::"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:516
msgid ""
"The *pre-release segment* contains a label representing the releaselevel_"
" (\"a\", \"b\", or \"rc\") and eventually a serial_ number (omitted, if "
"zero)."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:520
msgid ""
"The *development segment* is ``\".dev\"`` during active development "
"(release_ == False) and omitted for official releases and pre-releases."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:523
msgid ""
"Examples of ``docutils.__version__`` identifiers, over the course of "
"normal development (without branches), in ascending order:"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:527
msgid "Version Identifier"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:529
#: ../../docutils/docs/dev/policies.txt:537
msgid "final (release)"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:529
msgid "0.14"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:530
#: ../../docutils/docs/dev/policies.txt:538
msgid "beta (development) [#dev]_"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:530
msgid "0.15b.dev"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:531
msgid "beta (release)  [#skip]_"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:531
msgid "0.15b"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:532
msgid "candidate 1 (dev.)"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:532
msgid "0.15rc1.dev"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:533
msgid "candidate 1 (release)"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:533
msgid "0.15rc1"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:534
msgid "candidate 2 (dev.) [#skip]_"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:534
msgid "0.15rc2.dev"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:535
msgid "candidate 2 (release) [#skip]_"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:535
msgid "0.15rc2"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:536
msgid "..."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:537
msgid "0.15"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:538
msgid "0.16b.dev"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:541
msgid "Default active development state between releases."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:542
msgid "These steps may be skipped."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:547
msgid "Policy History"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:549
msgid ""
"Prior to version 0.4, Docutils didn't have an official version numbering "
"policy, and micro releases contained both bug fixes and new features."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:553
msgid ""
"An earlier version of this policy was adopted in October 2005, and took "
"effect with Docutils version 0.4."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:556
msgid ""
"This policy was updated in June 2017 for Docutils version 0.14. See "
"`Feature Request #50`_ and the `discussion on docutils-devel`__ from May "
"28 to June 20 2017."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:566
msgid "Snapshots"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:568
msgid ""
"Snapshot tarballs can be downloaded from the repository (see the "
"\"download snapshot\" button in the head of the code listing table)."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:571
msgid ""
"the `Docutils core`_, representing the current cutting-edge state of "
"development;"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:574
msgid ""
"the `sandbox directory`_ with contributed projects and extensions from "
"`the Sandbox`_;"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:583
msgid ""
"`development branches`_, representing ongoing development efforts to "
"bring new features into Docutils."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:593
msgid "Setting Up For Docutils Development"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:595
msgid ""
"When making changes to the code, testing is a must.  The code should be "
"run to verify that it produces the expected results, and the entire test "
"suite should be run too.  The modified Docutils code has to be accessible"
" to Python for the tests to have any meaning.  There are several ways to "
"keep the Docutils code accessible during development:"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:601
msgid ""
"Update your ``PYTHONPATH`` environment variable so that Python picks up "
"your local working copy of the code."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:604
msgid ""
"We'll assume that the `Docutils trunk`__ is checked out under your "
"``~/projects/`` directory."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:607
msgid "For the bash shell, add this to your ``~/.profile``::"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:612
msgid ""
"The first line points to the directory containing the ``docutils`` "
"package.  The second line exports this environment variable."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:615
msgid ""
"You many also want to add the ``tools`` directory to your binary "
"``PATH``::"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:622
msgid ""
"Create a symlink to the docutils package directory somewhere in the "
"module search path (``sys.path``), e.g., ::"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:628
msgid "Alternatively, use a `path configuration file`__."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:632
msgid ""
"You may also want to copy or link the front-end tools in "
"``docutils/tools`` to a suitable place in your binary PATH, e.g., ::"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:638
msgid "Do an `editable install`__ with pip."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:642
msgid "Install in `development mode`__ with setuptools."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:646
msgid ""
"Before you run anything, every time you make a change, reinstall "
"Docutils::"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:653
msgid ""
"This method is **not** recommended for day-to-day development; it's too "
"easy to forget.  Confusion inevitably ensues."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:656
msgid ""
"If you install Docutils this way, Python will always pick up the last-"
"installed copy of the code.  If you ever forget to reinstall the "
"\"docutils\" package, Python won't see your latest changes."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:661
msgid ""
"A useful addition to the ``docutils`` top-level directory in branches and"
" alternate copies of the code is a ``set-PATHS`` file containing the "
"following lines::"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:669
msgid ""
"Open a shell for this branch, ``cd`` to the ``docutils`` top-level "
"directory, and \"source\" this file.  For example, using the bash shell::"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:678
msgid "Mailing Lists"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:680
msgid "Developers are recommended to subscribe to all `Docutils mailing lists`_."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:687
msgid "The Wiki"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:689
msgid ""
"There is a development wiki at http://docutils.python-hosting.com/ as a "
"scratchpad for transient notes.  Please use the repository for permanent "
"document storage."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:694
msgid "Extensions and Related Projects"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:697
msgid "The Sandbox"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:699
#, python-format
msgid ""
"The `sandbox directory`_ is a place to play around, to try out and share "
"ideas.  It's a part of the Subversion repository but it isn't distributed"
" as part of Docutils releases.  Feel free to check in code to the "
"sandbox; that way people can try it out but you won't have to worry about"
" it working 100% error-free, as is the goal of the Docutils core.  A "
"project-specific subdirectory should be created for each new project.  "
"Any developer who wants to play in the sandbox may do so, but project "
"directories are recommended over personal directories, which discourage "
"collaboration.  It's OK to make a mess in the sandbox!  But please, play "
"nice."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:710
msgid ""
"Please update the `sandbox README`_ file with links and a brief "
"description of your work."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:713
msgid ""
"In order to minimize the work necessary for others to install and try out"
" new, experimental components, the following sandbox directory structure "
"is recommended::"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:738
msgid ""
"Some sandbox projects are destined to move to the Docutils core once "
"completed.  Others, such as add-ons to Docutils or applications of "
"Docutils, may graduate to become `parallel projects`_."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:750
msgid "Parallel Projects"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:752
msgid ""
"Parallel projects contain useful code that is not central to the "
"functioning of Docutils.  Examples are specialized add-ons or plug-ins, "
"and applications of Docutils.  They use Docutils, but Docutils does not "
"require their presence to function."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:757
msgid ""
"An official parallel project will have its own directory beside (or "
"parallel to) the main ``docutils`` directory in the Subversion "
"repository.  It can have its own web page in the docutils.sourceforge.net"
" domain, its own file releases and downloadable snapshots, and even a "
"mailing list if that proves useful. However, an official parallel project"
" has implications: it is expected to be maintained and continue to work "
"with changes to the core Docutils."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:766
msgid ""
"A parallel project requires a project leader, who must commit to "
"coordinate and maintain the implementation:"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:769
msgid "Answer questions from users and developers."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:770
msgid "Review suggestions, bug reports, and patches."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:771
msgid "Monitor changes and ensure the quality of the code and documentation."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:773
msgid "Coordinate with Docutils to ensure interoperability."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:774
msgid "Put together official project releases."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:776
msgid ""
"Of course, related projects may be created independently of Docutils. The"
" advantage of a parallel project is that the SourceForge environment and "
"the developer and user communities are already established.  Core "
"Docutils developers are available for consultation and may contribute to "
"the parallel project.  It's easier to keep the projects in sync when "
"there are changes made to the core Docutils code."
msgstr ""

#: ../../docutils/docs/dev/policies.txt:785
msgid "Other related projects"
msgstr ""

#: ../../docutils/docs/dev/policies.txt:787
msgid ""
"Many related but independent projects are listed in the Docutils `link "
"list`_. If you want your project to appear there, drop a note at the "
"Docutils-develop_ mailing list."
msgstr ""

